// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Data;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(SicerContext))]
    [Migration("20230818133429_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.Alquiler", b =>
                {
                    b.Property<int>("IdAlquiler")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAlquiler")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomovilId")
                        .HasColumnType("int")
                        .HasColumnName("AutomovilId");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    b.Property<double>("CostoTotal")
                        .HasColumnType("double")
                        .HasColumnName("CostoTotal");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("FechaIncio")
                        .HasColumnType("date")
                        .HasColumnName("FechaIncio");

                    b.HasKey("IdAlquiler");

                    b.HasIndex("AutomovilId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Alquiler", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Automovil", b =>
                {
                    b.Property<int>("IdAutomovil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAutomovil")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Año")
                        .HasColumnType("int")
                        .HasColumnName("Año");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int")
                        .HasColumnName("Capacidad");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Modelo");

                    b.Property<double>("PrecioDiario")
                        .HasColumnType("double")
                        .HasColumnName("PrecioDiario");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Tipo");

                    b.HasKey("IdAutomovil");

                    b.ToTable("Automovil", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCliente")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellidos");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("DNI");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Direccion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombres");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEmpleado")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Apellidos");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Cargo");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("DNI");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Direccion");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombres");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.RegistroDevolucion", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRegistro")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlquilerId")
                        .HasColumnType("int")
                        .HasColumnName("AlquilerId");

                    b.Property<double>("CombustibleDevuelto")
                        .HasColumnType("double")
                        .HasColumnName("CombustibleDevuelto");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("date")
                        .HasColumnName("FechaDevolucion");

                    b.Property<int>("KilometrajeDevuelto")
                        .HasColumnType("int")
                        .HasColumnName("KilometrajeDevuelto");

                    b.Property<double>("MontoAdicional")
                        .HasColumnType("double")
                        .HasColumnName("MontoAdicional");

                    b.HasKey("IdRegistro");

                    b.HasIndex("AlquilerId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("RegistroDevolucion", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.RegistroEntrega", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRegistro")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlquilerId")
                        .HasColumnType("int")
                        .HasColumnName("AlquilerId");

                    b.Property<double>("CombustibleEntregado")
                        .HasColumnType("double")
                        .HasColumnName("CombustibleEntregado");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int")
                        .HasColumnName("EmpleadoId");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("date")
                        .HasColumnName("FechaEntrega");

                    b.Property<int>("KilometrajeEntregado")
                        .HasColumnType("int")
                        .HasColumnName("KilometrajeEntregado");

                    b.HasKey("IdRegistro");

                    b.HasIndex("AlquilerId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("RegistroEntrega", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdReserva")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomovilId")
                        .HasColumnType("int")
                        .HasColumnName("AutomovilId");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteId");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("date")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("FechaIncio")
                        .HasColumnType("date")
                        .HasColumnName("FechaIncio");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("date")
                        .HasColumnName("FechaReserva");

                    b.HasKey("IdReserva");

                    b.HasIndex("AutomovilId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Sucursal", b =>
                {
                    b.Property<int>("IdSucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSucursal")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar")
                        .HasColumnName("Direccion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.HasKey("IdSucursal");

                    b.ToTable("Sucursal", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.SucursalAutomovil", b =>
                {
                    b.Property<int>("IdSucursalAutomovil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdSucursalAutomovil")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int")
                        .HasColumnName("CantidadDisponible");

                    b.Property<int>("IdAutomovil")
                        .HasColumnType("int")
                        .HasColumnName("IdAutomovil");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int")
                        .HasColumnName("IdSucursal");

                    b.HasKey("IdSucursalAutomovil");

                    b.HasIndex("IdAutomovil");

                    b.HasIndex("IdSucursal");

                    b.ToTable("SucuralAutomovil", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Alquiler", b =>
                {
                    b.HasOne("Dominio.Entities.Automovil", "Automoviles")
                        .WithMany("Alquileres")
                        .HasForeignKey("AutomovilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Cliente", "Clientes")
                        .WithMany("Alquileres")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automoviles");

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Dominio.Entities.RegistroDevolucion", b =>
                {
                    b.HasOne("Dominio.Entities.Alquiler", "Alquileres")
                        .WithMany("RegistroDeDevoluciones")
                        .HasForeignKey("AlquilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Empleado", "Empleados")
                        .WithMany("RegistroDeDevoluciones")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquileres");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Dominio.Entities.RegistroEntrega", b =>
                {
                    b.HasOne("Dominio.Entities.Alquiler", "Alquileres")
                        .WithMany("RegistroDeEntregas")
                        .HasForeignKey("AlquilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Empleado", "Empleados")
                        .WithMany("RegistroDeEntregas")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alquileres");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Dominio.Entities.Reserva", b =>
                {
                    b.HasOne("Dominio.Entities.Automovil", "Automoviles")
                        .WithMany("Reservas")
                        .HasForeignKey("AutomovilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Cliente", "Clientes")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automoviles");

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("Dominio.Entities.SucursalAutomovil", b =>
                {
                    b.HasOne("Dominio.Entities.Automovil", "Automoviles")
                        .WithMany("SucursalDeAutomoviles")
                        .HasForeignKey("IdAutomovil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Sucursal", "Sucursales")
                        .WithMany("SucursalDeAutomoviles")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Automoviles");

                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("Dominio.Entities.Alquiler", b =>
                {
                    b.Navigation("RegistroDeDevoluciones");

                    b.Navigation("RegistroDeEntregas");
                });

            modelBuilder.Entity("Dominio.Entities.Automovil", b =>
                {
                    b.Navigation("Alquileres");

                    b.Navigation("Reservas");

                    b.Navigation("SucursalDeAutomoviles");
                });

            modelBuilder.Entity("Dominio.Entities.Cliente", b =>
                {
                    b.Navigation("Alquileres");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Dominio.Entities.Empleado", b =>
                {
                    b.Navigation("RegistroDeDevoluciones");

                    b.Navigation("RegistroDeEntregas");
                });

            modelBuilder.Entity("Dominio.Entities.Sucursal", b =>
                {
                    b.Navigation("SucursalDeAutomoviles");
                });
#pragma warning restore 612, 618
        }
    }
}
